version: '3.5'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    expose:
      - 9092
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      #EXTERNAL_SAME_HOST: "//0.0.0.0:29092,INTERNAL://0.0.0.0:9092"
      KAFKA_CREATE_TOPICS: "bc-trn-event-dev:1:1,bc-trn-event-demo:1:1,bc-trn-csv-dev:1:1,bc-trn-csv-demo:1:1,bc-price-dev:1:1,bc-price-demo:1:1,bc-ca-event-demo:1:1,bc-ca-event-dev:1:1"
      KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: EXTERNAL_SAME_HOST://host.docker.internal:29092,INTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: EXTERNAL_SAME_HOST:PLAINTEXT,INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "${PG_USER:-postgres}"
      POSTGRES_PASSWORD: "${PG_PASSWORD:-password}"
    volumes:
      - pg-data:/var/lib/backup/data
      - ./postgres:/docker-entrypoint-initdb.d

networks:
  bc-demo:

volumes:
  pg-data:
  kafka: