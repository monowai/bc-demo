version: '3.5'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    expose:
      - 9092
    ports:
      - 9092:9092
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CREATE_TOPICS: "bc-trn-event-dev:1:1,bc-trn-event-demo:1:1,bc-trn-csv-dev:1:1,bc-trn-csv-demo:1:1,bc-price-dev:1:1,bc-price-demo:1:1,bc-ca-event-demo:1:1,bc-ca-event-dev:1:1"
      KAFKA_LISTENERS: "BC-DEMO://${KAKFA_HOST_NAME:-kafka}:9092"
      KAFKA_ADVERTISED_LISTENERS: "BC-DEMO://${KAKFA_HOST_NAME:-kafka}:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: BC-DEMO:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: BC-DEMO
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  postgres:
    image: postgres:12.3-alpine
    container_name: postgres
    expose:
      - 5432
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: "${PG_USER:-postgres}"
      POSTGRES_PASSWORD: "${PG_PASSWORD:-password}"
      POSTGRES_MULTIPLE_DATABASES: bc,kc,ev
    volumes:
      - pg-data:/var/lib/backup/data
      - ./postgres:/docker-entrypoint-initdb.d

  keycloak:
    # https://ordina-jworks.github.io/security/2019/08/22/Securing-Web-Applications-With-Keycloak.htm
    image: jboss/keycloak:10.0.2
    container_name: keycloak
    #    entrypoint: /opt/jboss/tools/docker-entrypoint.sh -Dkeycloak.profile.feature.token_exchange=enabled
    expose:
      - 8080
    ports:
      - 9620:8080
    environment:
      # https://ultimatesecurity.pro/post/okta-oidc/
      KEYCLOAK_USER: "${KC_USER:-admin}"
      KEYCLOAK_PASSWORD: "${KC_PASSWORD:-beancounter}"
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: kc
      DB_SCHEMA: public
      DB_USER: "${PG_USER:-postgres}"
      DB_PASSWORD: "${PG_PASSWORD:-password}"
      KEYCLOAK_IMPORT: /data/bc-dev-realm.json
    depends_on:
      - postgres
    volumes:
      - ./keycloak:/data

  data:
    image: monowai/bc-data
    container_name: data
    expose:
      - 9510
      - 9511
    # Ports should be published if you are running local:bc-view against this stack
    ports:
      - 9610:9510
      - 9611:9511
    environment:
      SERVER_PORT: 9510
      MANAGEMENT_SERVER_PORT: 9511

      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bc
      # https://docs.docker.com/compose/environment-variables/
      SPRING_DATASOURCE_USERNAME: "${PG_USER:-postgres}"
      SPRING_DATASOURCE_PASSWORD: "${PG_PASSWORD:-password}"
      BEANCOUNTER_MARKET_PROVIDERS_FIGI_KEY: ${FIGI}
      BEANCOUNTER_MARKET_PROVIDERS_FIGI_ENABLED: "true"
      BEANCOUNTER_MARKET_PROVIDERS_WTD_KEY: ${WTD}
      BEANCOUNTER_MARKET_PROVIDERS_WTD_MARKETS:
      BEANCOUNTER_MARKET_PROVIDERS_ALPHA_KEY: ${ALPHA}
      BEANCOUNTER_MARKET_PROVIDERS_ALPHA_MARKETS: NASDAQ,AMEX,NYSE,ASX,NZX,LON
      BEANCOUNTER_TOPICS_TRN_CSV: bc-trn-csv-demo
      BEANCOUNTER_TOPICS_TRN_EVENT: bc-trn-event-demo
      BEANCOUNTER_TOPICS_CA_EVENT: bc-ca-event-demo
      BEANCOUNTER_ZONE: "Asia/Singapore"
      ASSETS_SCHEDULE: "0 0/15 6-11 * * Tue-Sat"

      KAFKA_ENABLED: "true"
      AUTH_URI: "http://keycloak:8080/auth"
      AUTH_REALM: "${BC_REALM:-bc-dev}"
    links:
      - postgres

  position:
    image: monowai/bc-position
    container_name: position
    expose:
      - 9500
      - 9501
    # Publish this if you are running local:bc-view against docker services
    ports:
      - 9600:9500
      - 9601:9501

    environment:
      SERVER_PORT: 9500
      MANAGEMENT_SERVER_PORT: 9501

      MARKETDATA_URL: "http://data:9510/api"
      AUTH_URI: "http://keycloak:8080/auth"
      AUTH_REALM: "${BC_REALM:-bc-dev}"
    depends_on:
      - data
      - keycloak

  event:
    image: monowai/bc-event
    container_name: event
    expose:
      - 9520
    # Ports should be published if you are running local:bc-view against this stack
    ports:
      - 9630:9520
    environment:
      SERVER_PORT: 9520
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ev
      SPRING_DATASOURCE_USERNAME: "${PG_USER:-postgres}"
      SPRING_DATASOURCE_PASSWORD: "${PG_PASSWORD:-password}"
      SPRING_JPA_HIBERNATE_DDL-AUTO: "update"
      MARKETDATA_URL: "http://data:9510/api"
      POSITION_URL: "http://position:9500/api"
      AUTH_URI: "http://keycloak:8080/auth"
      KAFKA_ENABLED: "true"
      AUTH_REALM: "${BC_REALM:-bc-dev}"
      BEANCOUNTER_ZONE: "Asia/Singapore"
      EVENTS_SCHEDULE: "0 0/15 6-9 * * Tue-Sat"
      BEANCOUNTER_TOPICS_CA_EVENT: bc-ca-event-demo
      BEANCOUNTER_TOPICS_TRN_EVENT: bc-trn-event-demo
      SPRING_SECURITY_OAUTH2_REGISTRATION_CUSTOM_CLIENT-SECRET: "${BC_M2M:-notset}"

    links:
      - keycloak
      - postgres
      - data
      - position

  app:
    image: monowai/bc-app
    ports:
      - 4000:3000

    container_name: app
    environment:
      SVC_POSITION: "http://position:9500"
      SVC_DATA: "http://data:9510"
      RAZZLE_PUBLIC_DIR: "http://localhost:4000"
      KAFKA_URL: kafka:9092
      KAFKA_TOPIC_TRN: bc-trn-csv-demo
      KC_CLIENT: bc-demo
      AUTH_REALM: "${BC_REALM:-bc-dev}"
      AUTH_CLIENT: "${BC_CLIENT:-bc-dev}"

    depends_on:
      - position
      - data
      - kafka

volumes:
  pg-data:
  kafka: